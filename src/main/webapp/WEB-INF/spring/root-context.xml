<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    <!-- 빈 자동 스캔 
    servlet-context.xml에서 Controller를 자동 스캔 설정해서
    아래 설정에서는 Controller 자동 스캔 제외
    -->
    <context:component-scan base-package="kr.spring">
    	<context:exclude-filter type="annotation" 
    	    expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- TransactionManager 설정 -->
    <bean id="transactionManager"
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
      p:dataSource-ref="dataSource"/>
    
    <!-- DB연동 설정 파일 등록 -->
    <context:property-placeholder 
                 location="classpath:config/jdbc.properties"/>   
	<!-- 커넥션 풀을 이용한 DataSource 설정 -->
	<bean id="dataSource" 
	        class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>   
		<property name="username" value="${jdbc.username}"/> 
		<property name="password" value="${jdbc.password}"/>
		<!-- 최대 커넥션 개수 -->    
		<property name="maxActive" value="50"/>
		<!-- 접속이 없을 경우 최대 유지 커넥션 개수 -->
		<property name="maxIdle" value="30"/>
		<!-- 접속이 없을 경우 최소 유지 커넥션 개수 -->
		<property name="minIdle" value="20"/>
		<!-- 최대 대기시간(초) : 초과시 연결 실패 오류 발생 -->
		<property name="maxWait" value="5"/>
	</bean>
	
	<!-- 선언적 트랜잭션 처리 -->
	<tx:advice id="txAdvice" 
	                transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="insert*"/>
			<tx:method name="update*"/>
			<tx:method name="delete*"/>
		</tx:attributes>                
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="servicePublicMethod"
		expression="execution(public * kr.spring..*ServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice" 
		pointcut-ref="servicePublicMethod"/>
	</aop:config>
	
	<!-- myBatis 설정(어노테이션 가능) -->
	<bean id="sqlSessionFactory"
	 class="org.mybatis.spring.SqlSessionFactoryBean">
		 <property name="dataSource" ref="dataSource"/>
		 <!-- 자바빈(커맨드 객체)의 alias 지정
		 kr.spring.member.domain.MemberCommand -> memberCommand
		  -->
		 <property name="typeAliasesPackage" 
		          value="kr.spring.member.domain,
		          		 kr.spring.board.domain,
		          		 kr.spring.item.domain, 
		          		 kr.spring.itemReview.domain, 
		          		 kr.spring.cart.domain, 
		          		 kr.spring.order.domain,
		          		 kr.spring.category.domain,
		          		 kr.spring.flight.domain,
		          		 kr.spring.tour_info.domain,
		          		 kr.spring.hotel.domain,
		          		 kr.spring.common.domain,
		          		 kr.spring.travelreview.domain"/>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
		        value="kr.spring.member.dao,
		        	   kr.spring.board.dao,
		        	   kr.spring.item.dao,
		        	   kr.spring.itemReview.dao,
		        	   kr.spring.cart.dao,
		        	   kr.spring.order.dao,
		        	   kr.spring.category.dao,
		        	   kr.spring.flight.dao,
		        	   kr.spring.tour_info.dao,
		        	   kr.spring.hotel.dao,
		        	   kr.spring.common.dao,
		        	   kr.spring.travelreview.dao"/>
	</bean>
 	<!-- mail bean -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="defaultEncoding" value="utf-8" />
		<!-- 발신자 Gmail : username / password -->
		<!-- Gmail 아이디 -->
		<property name="username" value="helloworld.khacademy@gmail.com" />
		<!-- Gmail 패스워드 -->
		<property name="password" value="khacademy123" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	<bean id="email" class="kr.spring.member.email.Email" />
	<bean id="emailSender" class="kr.spring.member.email.EmailSender" />
</beans>
