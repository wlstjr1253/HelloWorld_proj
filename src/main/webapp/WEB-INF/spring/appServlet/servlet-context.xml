<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- popup창 또는 Ajax 통신 등 tiles를 이용하지 않고 JSP를 호출해야 하는 경우 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" /> 
		<beans:property name="order" value="2" /> <!-- 우선순위 2 -->
	</beans:bean>
	
	<context:component-scan base-package="kr.spring.member.controller" />
	<context:component-scan base-package="kr.spring.board.controller" />
	<context:component-scan base-package="kr.spring.item.controller" />
	<context:component-scan base-package="kr.spring.itemReview.controller" />
	<context:component-scan base-package="kr.spring.cart.controller" />
	<context:component-scan base-package="kr.spring.order.controller" />
	<context:component-scan base-package="kr.spring.category.controller" />
	<context:component-scan base-package="kr.spring.flight.controller" />
	<context:component-scan base-package="kr.spring.tour_info.controller" />
	<context:component-scan base-package="kr.spring.hotel.controller" />
	<context:component-scan base-package="kr.spring.common.controller" />
	<context:component-scan base-package="kr.spring.travelreview.controller" />
	
	<!-- 데이터 작업이 없이 뷰 호출하는 경우 - 메인페이지 -->
	<view-controller path="/main/main.do" view-name="main" />
	
	<!-- 메시지 처리 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>messages.validation</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- tiles 설정 -->
	<beans:bean id="tilesConfigurer" 
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				 <beans:value>/WEB-INF/tiles-def/main.xml</beans:value>
				 <beans:value>/WEB-INF/tiles-def/member.xml</beans:value>
				 <beans:value>/WEB-INF/tiles-def/board.xml</beans:value>
				 <beans:value>/WEB-INF/tiles-def/item.xml</beans:value>
				 <beans:value>/WEB-INF/tiles-def/itemcart.xml</beans:value>
				 <beans:value>/WEB-INF/tiles-def/flight.xml</beans:value>
				 <beans:value>/WEB-INF/tiles-def/tour_info.xml</beans:value>
				 <beans:value>/WEB-INF/tiles-def/hotel.xml</beans:value>
				 <beans:value>/WEB-INF/tiles-def/review.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="viewResolver" 
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" /> <!-- 우선순위 1 -->
	</beans:bean>
	
	<!-- 파일 다운로드 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" /> <!-- 우선순위 0 -->
	
	<!-- 파일 업로드 -->
	<beans:bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="52428800" />
		<beans:property name="defaultEncoding" value="UTF-8" />	
	</beans:bean>
	
	<interceptors>
		<!-- 로그인 여부 체크 -->
		<interceptor>
			<mapping path="/member/detail.do" />
			<mapping path="/member/update.do" />
			<mapping path="/member/delete.do" />
			<mapping path="/member/changePassword.do" />
			<mapping path="/member/memberList.do" />
			<mapping path="/member/guideList.do" />
			<mapping path="/hotel/hotelRsrv.do" />
			<beans:bean class="kr.spring.interceptor.LoginCheckInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
	<!-- 암호화,복호화 알고리즘 처리 -->
	<beans:bean id="cipherAES" class="kr.spring.util.CipherTemplate">
		<beans:property name="algorithm" value="AES"/>
		<!-- CipherTemplate에서 run configuration 하고 arument를 AES로 실행 하면 키가 나온다. --> 
		<beans:property name="secretKey" value="pt2q2j6e7iek8lzxze2n4icwi"/>
	</beans:bean>	
</beans:beans>
