conn /as sysdba

create tablespace hello_world datafile 'C:\oraclexe\app\oracle\oradata\XE\hello_world.DBF' size 100m autoextend on next 10m;

--for mac
--create tablespace hello_world datafile '\Users\SePh\my\oracle\data\oradata\XE\hello_world.DBF' size 100m autoextend on next 10m;

create user admin identified by kh_123# default tablespace hello_world;
grant resource, connect, dba to admin;


-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- USER_AUTH Table Create SQL
CREATE TABLE USER_AUTH
(
    USER_ID      VARCHAR2(20)    NOT NULL, 
    USER_AUTH    NUMBER(1)       DEFAULT 1 NOT NULL, 
    CONSTRAINT USER_AUTH_PK PRIMARY KEY (USER_ID)
)
/

COMMENT ON TABLE USER_AUTH IS '회원 권한 테이블'
/

COMMENT ON COLUMN USER_AUTH.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN USER_AUTH.USER_AUTH IS '0:탈퇴/1:일반/2:가이드/3:관리자'
/


-- NATION_CITY Table Create SQL
CREATE TABLE NATION_CITY
(
    NC_CD        CHAR(3)         NOT NULL, 
    NC_NATION    VARCHAR2(30)    NOT NULL, 
    NC_CITY      VARCHAR2(50)    NOT NULL, 
    CONSTRAINT NATION_CITY_PK PRIMARY KEY (NC_CD)
)
/

COMMENT ON TABLE NATION_CITY IS '국가 도시 테이블'
/

COMMENT ON COLUMN NATION_CITY.NC_CD IS '도시코드'
/

COMMENT ON COLUMN NATION_CITY.NC_NATION IS '국가명'
/

COMMENT ON COLUMN NATION_CITY.NC_CITY IS '도시명'
/


-- ITEM_POST Table Create SQL
CREATE TABLE ITEM_POST
(
    I_NUM     NUMBER    NOT NULL, 
    I_POST    NUMBER    DEFAULT 1 NOT NULL, 
    CONSTRAINT ITEM_POST_PK PRIMARY KEY (I_NUM)
)
/

CREATE SEQUENCE ITEM_POST_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ITEM_POST_AI_TRG
BEFORE INSERT ON ITEM_POST 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ITEM_POST_SEQ.NEXTVAL
    INTO :NEW.I_NUM
    FROM DUAL;
END;
/

--DROP TRIGGER ITEM_POST_AI_TRG;
/

--DROP SEQUENCE ITEM_POST_SEQ;
/

COMMENT ON TABLE ITEM_POST IS '상품 게시 테이블'
/

COMMENT ON COLUMN ITEM_POST.I_NUM IS '상품번호'
/

COMMENT ON COLUMN ITEM_POST.I_POST IS '0:숨김/1:보임'
/


-- FLIGHT_INFO Table Create SQL
CREATE TABLE FLIGHT_INFO
(
    FI_ID      NUMBER          NOT NULL, 
    FI_NM      VARCHAR2(20)    NOT NULL, 
    FI_LOGO    BLOB            NULL, 
    CONSTRAINT FLIGHT_INFO_PK PRIMARY KEY (FI_ID)
)
/

CREATE SEQUENCE FLIGHT_INFO_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER FLIGHT_INFO_AI_TRG
BEFORE INSERT ON FLIGHT_INFO 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT FLIGHT_INFO_SEQ.NEXTVAL
    INTO :NEW.FI_ID
    FROM DUAL;
END;
/

--DROP TRIGGER FLIGHT_INFO_AI_TRG;
/

--DROP SEQUENCE FLIGHT_INFO_SEQ;
/

COMMENT ON TABLE FLIGHT_INFO IS '항공사 정보 테이블'
/

COMMENT ON COLUMN FLIGHT_INFO.FI_ID IS '항공사 ID'
/

COMMENT ON COLUMN FLIGHT_INFO.FI_NM IS '항공사명'
/

COMMENT ON COLUMN FLIGHT_INFO.FI_LOGO IS '항공사 이미지'
/


-- PAYMENT_HIST Table Create SQL
CREATE TABLE PAYMENT_HIST
(
    PH_IDX         NUMBER          NOT NULL, 
    USER_ID        VARCHAR2(20)    NOT NULL, 
    PH_PAY_TYPE    CHAR(1)         NOT NULL, 
    PH_PAY         NUMBER          NOT NULL, 
    PH_REG_DT      DATE            NOT NULL, 
    CONSTRAINT PAYMENT_HIST_PK PRIMARY KEY (PH_IDX)
)
/

CREATE SEQUENCE PAYMENT_HIST_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER PAYMENT_HIST_AI_TRG
BEFORE INSERT ON PAYMENT_HIST 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT PAYMENT_HIST_SEQ.NEXTVAL
    INTO :NEW.PH_IDX
    FROM DUAL;
END;
/

--DROP TRIGGER PAYMENT_HIST_AI_TRG;
/

--DROP SEQUENCE PAYMENT_HIST_SEQ;
/

COMMENT ON TABLE PAYMENT_HIST IS '결제 내역'
/

COMMENT ON COLUMN PAYMENT_HIST.PH_IDX IS '결제 내역 IDX'
/

COMMENT ON COLUMN PAYMENT_HIST.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN PAYMENT_HIST.PH_PAY_TYPE IS '0:현금/1:카드/2:계좌이체/3:환불'
/

COMMENT ON COLUMN PAYMENT_HIST.PH_PAY IS '결제 금액'
/

COMMENT ON COLUMN PAYMENT_HIST.PH_REG_DT IS '결제 일시'
/

ALTER TABLE PAYMENT_HIST
    ADD CONSTRAINT FK_PAYMENT_HIST_USER_ID_USER_A FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/


-- FLIGHT_SPOT_INFO Table Create SQL
CREATE TABLE FLIGHT_SPOT_INFO
(
    FSI_IDX             NUMBER      NOT NULL, 
    FI_ID               NUMBER      NOT NULL, 
    FSI_START_PLACE     CHAR(3)     NOT NULL, 
    FSI_ARRIVE_PLACE    CHAR(3)     NOT NULL, 
    FSI_PASS1_PLACE     CHAR(3)     NULL, 
    FSI_PASS2_PLACE     CHAR(3)     NULL, 
    FSI_START_DT        CHAR(16)    NOT NULL, 
    FSI_ARRIVE_DT       CHAR(16)    NOT NULL, 
    FSI_PASS1_DT        CHAR(16)    NULL, 
    FSI_PASS2_DT        CHAR(16)    NULL, 
    FSI_REG_DT          DATE        NOT NULL, 
    FSI_STATE           CHAR(1)     DEFAULT '0' NOT NULL, 
    FSI_FIR_SEAT        NUMBER      DEFAULT 0 NOT NULL, 
    FSI_BUS_SEAT        NUMBER      DEFAULT 0 NOT NULL, 
    FSI_ECO_SEAT        NUMBER      DEFAULT 0 NOT NULL, 
    FSI_FIR_PC          NUMBER      DEFAULT 0 NOT NULL, 
    FSI_BUS_PC          NUMBER      DEFAULT 0 NOT NULL, 
    FSI_ECO_PC          NUMBER      DEFAULT 0 NOT NULL, 
    FSI_FIR_MIL         NUMBER      DEFAULT 0 NOT NULL, 
    FSI_BUS_MIL         NUMBER      DEFAULT 0 NOT NULL, 
    FSI_ECO_MIL         NUMBER      DEFAULT 0 NOT NULL, 
    CONSTRAINT FLIGHT_SPOT_INFO_PK PRIMARY KEY (FSI_IDX)
)
/

CREATE SEQUENCE FLIGHT_SPOT_INFO_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER FLIGHT_SPOT_INFO_AI_TRG
BEFORE INSERT ON FLIGHT_SPOT_INFO 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT FLIGHT_SPOT_INFO_SEQ.NEXTVAL
    INTO :NEW.FSI_IDX
    FROM DUAL;
END;
/

--DROP TRIGGER FLIGHT_SPOT_INFO_AI_TRG;
/

--DROP SEQUENCE FLIGHT_SPOT_INFO_SEQ;
/

COMMENT ON TABLE FLIGHT_SPOT_INFO IS '항공권 정보 테이블'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_IDX IS '항공권 IDX'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FI_ID IS '항공사 ID'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_START_PLACE IS '출발지'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_ARRIVE_PLACE IS '도착지'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_PASS1_PLACE IS '경유지1'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_PASS2_PLACE IS '경유지2'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_START_DT IS 'YYYY-MM-DD HH24:MI'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_ARRIVE_DT IS 'YYYY-MM-DD HH24:MI'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_PASS1_DT IS 'YYYY-MM-DD HH24:MI'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_PASS2_DT IS 'YYYY-MM-DD HH24:MI'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_REG_DT IS '항공권 등록일'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_STATE IS '0:구매 가능 / 1:구매 불가능'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_FIR_SEAT IS 'FIRSTCLASS 좌석 수'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_BUS_SEAT IS 'BUSINESS 좌석 수'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_ECO_SEAT IS 'ECONOMY 좌석 수'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_FIR_PC IS 'FIRSTCLASS 가격'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_BUS_PC IS 'BUSINESS 가격'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_ECO_PC IS 'ECONOMY 가격'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_FIR_MIL IS 'FIRSTCLASS 적립 마일리지'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_BUS_MIL IS 'BUSINESS 적립 마일리지'
/

COMMENT ON COLUMN FLIGHT_SPOT_INFO.FSI_ECO_MIL IS 'ECONOMY 적립 마일리지'
/

ALTER TABLE FLIGHT_SPOT_INFO
    ADD CONSTRAINT FK_FLIGHT_SPOT_INFO_FI_ID_FLIG FOREIGN KEY (FI_ID)
        REFERENCES FLIGHT_INFO (FI_ID)
/

-- FLIGHT_RSRV_LOG Table Create SQL
CREATE TABLE FLIGHT_RSRV_LOG
(
    FR_ID                NUMBER          NOT NULL, 
    FSI_IDX              NUMBER          NOT NULL, 
    USER_ID              VARCHAR2(20)    NOT NULL, 
    FR_RSRV_SEAT_TYPE    CHAR(3)         NOT NULL, 
    FR_ADULT_PP          NUMBER          NOT NULL, 
    FR_KID_PP            NUMBER          DEFAULT 0 NOT NULL, 
    PH_IDX               NUMBER          NOT NULL, 
    FR_NM                VARCHAR2(20)    NOT NULL, 
    FR_EMAIL             VARCHAR2(50)    NOT NULL, 
    FR_PHONE             VARCHAR2(13)    NOT NULL, 
    FR_PASSPORT          VARCHAR2(20)    NULL, 
    FR_AGE               NUMBER          NULL, 
    CONSTRAINT FLIGHT_RSRV_LOG_PK PRIMARY KEY (FR_ID)
)
/

CREATE SEQUENCE FLIGHT_RSRV_LOG_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER FLIGHT_RSRV_LOG_AI_TRG
BEFORE INSERT ON FLIGHT_RSRV_LOG 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT FLIGHT_RSRV_LOG_SEQ.NEXTVAL
    INTO :NEW.FR_ID
    FROM DUAL;
END;
/

--DROP TRIGGER FLIGHT_RSRV_LOG_AI_TRG;
/

--DROP SEQUENCE FLIGHT_RSRV_LOG_SEQ;
/

COMMENT ON TABLE FLIGHT_RSRV_LOG IS '항공권 예약 테이블'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.FR_ID IS '항공권 예약 ID'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.FSI_IDX IS '항공권 IDX'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.FR_RSRV_SEAT_TYPE IS 'FIR/BUS/ECO'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.FR_ADULT_PP IS '성인 인원'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.FR_KID_PP IS '만 15세 이하'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.PH_IDX IS '결제 내역 IDX'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.FR_NM IS '예약자명'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.FR_EMAIL IS '예약자 이메일'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.FR_PHONE IS '예약자 연락처'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.FR_PASSPORT IS '예약자 여권번호'
/

COMMENT ON COLUMN FLIGHT_RSRV_LOG.FR_AGE IS '10대 단위'
/

ALTER TABLE FLIGHT_RSRV_LOG
    ADD CONSTRAINT FK_FLIGHT_RSRV_LOG_FSI_IDX_FLI FOREIGN KEY (FSI_IDX)
        REFERENCES FLIGHT_SPOT_INFO (FSI_IDX)
/

ALTER TABLE FLIGHT_RSRV_LOG
    ADD CONSTRAINT FK_FLIGHT_RSRV_LOG_USER_ID_USE FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/

ALTER TABLE FLIGHT_RSRV_LOG
    ADD CONSTRAINT FK_FLIGHT_RSRV_LOG_PH_IDX_PAYM FOREIGN KEY (PH_IDX)
        REFERENCES PAYMENT_HIST (PH_IDX)
/


-- TOUR_INFO Table Create SQL
CREATE TABLE TOUR_INFO
(
    TI_ID              NUMBER          NOT NULL, 
    TI_NM              VARCHAR2(20)    NOT NULL, 
    TI_IMG             VARCHAR2(20)    NULL, 
    NC_CD              CHAR(3)         NOT NULL, 
    TI_START_DAY       CHAR(10)        NOT NULL, 
    TI_END_DAY         CHAR(10)        NOT NULL, 
    TI_MIN_PP          NUMBER          NOT NULL, 
    TI_MAX_PP          NUMBER          NOT NULL, 
    TI_PICKUP_PLACE    VARCHAR2(50)    NOT NULL, 
    TI_PICKUP_TIME     CHAR(5)         NOT NULL, 
    TI_CONTENT         CLOB            NOT NULL, 
    TI_PC              NUMBER          NOT NULL, 
    TI_STATE           CHAR(1)         NOT NULL, 
    CONSTRAINT TOUR_INFO_PK PRIMARY KEY (TI_ID)
)
/

CREATE SEQUENCE TOUR_INFO_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TOUR_INFO_AI_TRG
BEFORE INSERT ON TOUR_INFO 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TOUR_INFO_SEQ.NEXTVAL
    INTO :NEW.TI_ID
    FROM DUAL;
END;
/

--DROP TRIGGER TOUR_INFO_AI_TRG;
/

--DROP SEQUENCE TOUR_INFO_SEQ;
/

COMMENT ON TABLE TOUR_INFO IS '투어 정보 테이블'
/

COMMENT ON COLUMN TOUR_INFO.TI_ID IS '투어 ID'
/

COMMENT ON COLUMN TOUR_INFO.TI_NM IS '투어명'
/

COMMENT ON COLUMN TOUR_INFO.TI_IMG IS '투어 이미지'
/

COMMENT ON COLUMN TOUR_INFO.NC_CD IS '도시 코드'
/

COMMENT ON COLUMN TOUR_INFO.TI_START_DAY IS 'YYYY-MM-DD'
/

COMMENT ON COLUMN TOUR_INFO.TI_END_DAY IS 'YYYY-MM-DD'
/

COMMENT ON COLUMN TOUR_INFO.TI_MIN_PP IS '투어 최소인원'
/

COMMENT ON COLUMN TOUR_INFO.TI_MAX_PP IS '투어 최대인원'
/

COMMENT ON COLUMN TOUR_INFO.TI_PICKUP_PLACE IS '픽업 장소'
/

COMMENT ON COLUMN TOUR_INFO.TI_PICKUP_TIME IS 'HH24:MI'
/

COMMENT ON COLUMN TOUR_INFO.TI_CONTENT IS '상세 내용'
/

COMMENT ON COLUMN TOUR_INFO.TI_PC IS '투어 인당 가격'
/

COMMENT ON COLUMN TOUR_INFO.TI_STATE IS '0:판매중/1:판매중지/2:마감'
/

ALTER TABLE TOUR_INFO
    ADD CONSTRAINT FK_TOUR_INFO_NC_CD_NATION_CITY FOREIGN KEY (NC_CD)
        REFERENCES NATION_CITY (NC_CD)
/


-- STAYING_INFO Table Create SQL
CREATE TABLE STAYING_INFO
(
    ST_ID          NUMBER          NOT NULL, 
    ST_NM          VARCHAR2(20)    NOT NULL, 
    NC_CD          CHAR(3)         NOT NULL, 
    ST_TYPE        VARCHAR2(20)    NOT NULL, 
    ST_ADDR        VARCHAR2(50)    NOT NULL, 
    ST_CVNTL       VARCHAR2(50)    NULL, 
    ST_PLACE_ID    VARCHAR2(50)    NULL, 
    ST_LA          NUMBER          NOT NULL, 
    ST_LO          NUMBER          NOT NULL, 
    CONSTRAINT STAYING_INFO_PK PRIMARY KEY (ST_ID)
)
/

CREATE SEQUENCE STAYING_INFO_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER STAYING_INFO_AI_TRG
BEFORE INSERT ON STAYING_INFO 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT STAYING_INFO_SEQ.NEXTVAL
    INTO :NEW.ST_ID
    FROM DUAL;
END;
/

--DROP TRIGGER STAYING_INFO_AI_TRG;
/

--DROP SEQUENCE STAYING_INFO_SEQ;
/

COMMENT ON TABLE STAYING_INFO IS '숙박 정보 테이블'
/

COMMENT ON COLUMN STAYING_INFO.ST_ID IS '숙박 ID'
/

COMMENT ON COLUMN STAYING_INFO.ST_NM IS '숙박명'
/

COMMENT ON COLUMN STAYING_INFO.NC_CD IS '도시코드'
/

COMMENT ON COLUMN STAYING_INFO.ST_TYPE IS '숙박 유형'
/

COMMENT ON COLUMN STAYING_INFO.ST_ADDR IS '상세주소'
/

COMMENT ON COLUMN STAYING_INFO.ST_CVNTL IS ',로 구분'
/

COMMENT ON COLUMN STAYING_INFO.ST_PLACE_ID IS '구글맵 장소 ID'
/

COMMENT ON COLUMN STAYING_INFO.ST_LA IS '위도'
/

COMMENT ON COLUMN STAYING_INFO.ST_LO IS '경도'
/

ALTER TABLE STAYING_INFO
    ADD CONSTRAINT FK_STAYING_INFO_NC_CD_NATION_C FOREIGN KEY (NC_CD)
        REFERENCES NATION_CITY (NC_CD)
/

ALTER TABLE STAYING_INFO
    ADD CONSTRAINT UC_ST_PLACE_ID UNIQUE (ST_PLACE_ID)
/


-- STAYING_ROOM Table Create SQL
CREATE TABLE STAYING_ROOM
(
    SR_ID           NUMBER          NOT NULL, 
    ST_ID           NUMBER          NOT NULL, 
    SR_ROOM_CNT     NUMBER          DEFAULT 1 NOT NULL, 
    SR_MAX_PP       NUMBER          NOT NULL, 
    SR_ADULT_PC     NUMBER          DEFAULT 0 NOT NULL, 
    SR_KID_PC       NUMBER          DEFAULT 0 NOT NULL, 
    SR_BED          NUMBER          DEFAULT 0 NOT NULL, 
    SR_TOILET       NUMBER          DEFAULT 0 NOT NULL, 
    SR_CHECK_IN     CHAR(4)         NULL, 
    SR_CHECK_OUT    CHAR(4)         NULL, 
    SR_CONTEXT      CLOB            NULL, 
    SR_IMG1         VARCHAR2(50)    NOT NULL, 
    SR_IMG2         VARCHAR2(50)    NULL, 
    SR_IMG3         VARCHAR2(50)    NULL, 
    SR_IMG4         VARCHAR2(50)    NULL, 
    SR_IMG5         VARCHAR2(50)    NULL, 
    CONSTRAINT STAYING_ROOM_PK PRIMARY KEY (SR_ID)
)
/

CREATE SEQUENCE STAYING_ROOM_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER STAYING_ROOM_AI_TRG
BEFORE INSERT ON STAYING_ROOM 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT STAYING_ROOM_SEQ.NEXTVAL
    INTO :NEW.SR_ID
    FROM DUAL;
END;
/

--DROP TRIGGER STAYING_ROOM_AI_TRG;
/

--DROP SEQUENCE STAYING_ROOM_SEQ;
/

COMMENT ON TABLE STAYING_ROOM IS '숙박 방 테이블'
/

COMMENT ON COLUMN STAYING_ROOM.SR_ID IS '숙박 방 ID'
/

COMMENT ON COLUMN STAYING_ROOM.ST_ID IS '숙박 ID'
/

COMMENT ON COLUMN STAYING_ROOM.SR_ROOM_CNT IS '방 개수'
/

COMMENT ON COLUMN STAYING_ROOM.SR_MAX_PP IS '최대 인원'
/

COMMENT ON COLUMN STAYING_ROOM.SR_ADULT_PC IS '성인당 가격'
/

COMMENT ON COLUMN STAYING_ROOM.SR_KID_PC IS '만 15살 이하'
/

COMMENT ON COLUMN STAYING_ROOM.SR_BED IS '침대 개수'
/

COMMENT ON COLUMN STAYING_ROOM.SR_TOILET IS '0:공용화장실'
/

COMMENT ON COLUMN STAYING_ROOM.SR_CHECK_IN IS '24시간 기준'
/

COMMENT ON COLUMN STAYING_ROOM.SR_CHECK_OUT IS '24시간 기준'
/

COMMENT ON COLUMN STAYING_ROOM.SR_CONTEXT IS '상세 설명'
/

COMMENT ON COLUMN STAYING_ROOM.SR_IMG1 IS '이미지1'
/

COMMENT ON COLUMN STAYING_ROOM.SR_IMG2 IS '이미지2'
/

COMMENT ON COLUMN STAYING_ROOM.SR_IMG3 IS '이미지3'
/

COMMENT ON COLUMN STAYING_ROOM.SR_IMG4 IS '이미지4'
/

COMMENT ON COLUMN STAYING_ROOM.SR_IMG5 IS '이미지5'
/

ALTER TABLE STAYING_ROOM
    ADD CONSTRAINT FK_STAYING_ROOM_ST_ID_STAYING_ FOREIGN KEY (ST_ID)
        REFERENCES STAYING_INFO (ST_ID)
/


-- STAYING_RSRV_LOG Table Create SQL
CREATE TABLE STAYING_RSRV_LOG
(
    SRL_ID              NUMBER          NOT NULL, 
    SR_ID               NUMBER          NOT NULL, 
    USER_ID             VARCHAR2(20)    NOT NULL, 
    SRL_PP              NUMBER          DEFAULT 1 NOT NULL, 
    SRL_TOTAL_PC        NUMBER          NOT NULL, 
    SRL_CHECK_IN_DT     CHAR(16)        NOT NULL, 
    SRL_CHECK_OUT_DT    CHAR(16)        NOT NULL, 
    SRL_NM              VARCHAR2(20)    NOT NULL, 
    SRL_EMAIL           VARCHAR2(50)    NOT NULL, 
    SRL_PHONE           VARCHAR2(13)    NOT NULL, 
    SRL_AGE             NUMBER          NULL, 
    CONSTRAINT STAYING_RSRV_LOG_PK PRIMARY KEY (SRL_ID)
)
/

CREATE SEQUENCE STAYING_RSRV_LOG_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER STAYING_RSRV_LOG_AI_TRG
BEFORE INSERT ON STAYING_RSRV_LOG 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT STAYING_RSRV_LOG_SEQ.NEXTVAL
    INTO :NEW.SRL_ID
    FROM DUAL;
END;
/

--DROP TRIGGER STAYING_RSRV_LOG_AI_TRG;
/

--DROP SEQUENCE STAYING_RSRV_LOG_SEQ;
/

COMMENT ON TABLE STAYING_RSRV_LOG IS '숙박 예약 내역'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.SRL_ID IS '숙박 예약 ID'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.SR_ID IS '숙박 방 ID'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.SRL_PP IS '숙박 예약 인원'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.SRL_TOTAL_PC IS '총 가격'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.SRL_CHECK_IN_DT IS 'YYYY-MM-DD HH24:MI'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.SRL_CHECK_OUT_DT IS 'YYYY-MM-DD HH24:MI'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.SRL_NM IS '예약자명'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.SRL_EMAIL IS '예약자 이메일'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.SRL_PHONE IS '예약자 연락처'
/

COMMENT ON COLUMN STAYING_RSRV_LOG.SRL_AGE IS '10대 단위'
/

ALTER TABLE STAYING_RSRV_LOG
    ADD CONSTRAINT FK_STAYING_RSRV_LOG_SR_ID_STAY FOREIGN KEY (SR_ID)
        REFERENCES STAYING_ROOM (SR_ID)
/

ALTER TABLE STAYING_RSRV_LOG
    ADD CONSTRAINT FK_STAYING_RSRV_LOG_USER_ID_US FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/


-- PACKAGE_INFO Table Create SQL
CREATE TABLE PACKAGE_INFO
(
    PI_ID                      NUMBER           NOT NULL, 
    PI_NM                      VARCHAR2(20)     NOT NULL, 
    PI_IMG                     VARCHAR2(20)     NULL, 
    PI_COPY_CONTENT            VARCHAR2(100)    NULL, 
    NC_CD                      CHAR(3)          NOT NULL, 
    PI_START_DAY               CHAR(10)         NOT NULL, 
    PI_END_DAY                 CHAR(10)         NOT NULL, 
    PI_MIN_PP                  NUMBER           NOT NULL, 
    PI_MAX_PP                  NUMBER           NOT NULL, 
    PI_START_FLIGHT_RSRV_ID    NUMBER           NOT NULL, 
    PI_END_FLIGHT_RSRV_ID      NUMBER           NOT NULL, 
    PI_STAYING_RSRV_ID         NUMBER           NOT NULL, 
    PI_TIME_DIFF               NUMBER           NOT NULL, 
    PI_CURRENCY                VARCHAR2(20)     NOT NULL, 
    PI_VISA                    VARCHAR2(20)     NOT NULL, 
    PI_VOLT                    VARCHAR2(10)     NOT NULL, 
    PI_LANG                    VARCHAR2(20)     NOT NULL, 
    PI_CONTENT                 CLOB             NOT NULL, 
    PI_PC                      NUMBER           NOT NULL, 
    PI_STATE                   CHAR(1)          NOT NULL, 
    CONSTRAINT PACKAGE_INFO_PK PRIMARY KEY (PI_ID)
)
/

CREATE SEQUENCE PACKAGE_INFO_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER PACKAGE_INFO_AI_TRG
BEFORE INSERT ON PACKAGE_INFO 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT PACKAGE_INFO_SEQ.NEXTVAL
    INTO :NEW.PI_ID
    FROM DUAL;
END;
/

--DROP TRIGGER PACKAGE_INFO_AI_TRG;
/

--DROP SEQUENCE PACKAGE_INFO_SEQ;
/

COMMENT ON TABLE PACKAGE_INFO IS '패키지 정보 테이블'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_ID IS '패키지 ID'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_NM IS '패키지명'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_IMG IS '패키지 이미지'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_COPY_CONTENT IS '패키지 카피글'
/

COMMENT ON COLUMN PACKAGE_INFO.NC_CD IS '패키지 진행 도시'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_START_DAY IS 'YYYY-MM-DD'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_END_DAY IS '패키지 종료일'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_MIN_PP IS '0'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_MAX_PP IS '0'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_START_FLIGHT_RSRV_ID IS '패키지 출발 항공권'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_END_FLIGHT_RSRV_ID IS '패키지 도착 항공권'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_STAYING_RSRV_ID IS '패키지 숙박'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_TIME_DIFF IS '현지 시차'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_CURRENCY IS '화폐'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_VISA IS '비자 정보'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_VOLT IS '전압'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_LANG IS '현지 언어'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_CONTENT IS '상세 내용'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_PC IS '패키지 인당 가격'
/

COMMENT ON COLUMN PACKAGE_INFO.PI_STATE IS '0:판매중/1:판매중지/2:마감'
/

ALTER TABLE PACKAGE_INFO
    ADD CONSTRAINT FK_PACKAGE_INFO_NC_CD_NATION_C FOREIGN KEY (NC_CD)
        REFERENCES NATION_CITY (NC_CD)
/

ALTER TABLE PACKAGE_INFO
    ADD CONSTRAINT FK_PACKAGE_INFO_PI_START_FLIGH FOREIGN KEY (PI_START_FLIGHT_RSRV_ID, PI_END_FLIGHT_RSRV_ID)
        REFERENCES FLIGHT_RSRV_LOG (FR_ID, FR_ID)
/

ALTER TABLE PACKAGE_INFO
    ADD CONSTRAINT FK_PACKAGE_INFO_PI_STAYING_RSR FOREIGN KEY (PI_STAYING_RSRV_ID)
        REFERENCES STAYING_RSRV_LOG (SRL_ID)
/


-- ITEM_CATEGORY Table Create SQL
CREATE TABLE ITEM_CATEGORY
(
    ICT_NUM      NUMBER          NOT NULL, 
    ICT_NM       VARCHAR2(20)    NOT NULL, 
    ICT_STATE    NUMBER          NOT NULL, 
    CONSTRAINT ITEM_CATEGORY_PK PRIMARY KEY (ICT_NUM)
)
/

CREATE SEQUENCE ITEM_CATEGORY_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ITEM_CATEGORY_AI_TRG
BEFORE INSERT ON ITEM_CATEGORY 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ITEM_CATEGORY_SEQ.NEXTVAL
    INTO :NEW.ICT_NUM
    FROM DUAL;
END;
/

--DROP TRIGGER ITEM_CATEGORY_AI_TRG;
/

--DROP SEQUENCE ITEM_CATEGORY_SEQ;
/

COMMENT ON TABLE ITEM_CATEGORY IS '아이템 카테고리 테이블'
/

COMMENT ON COLUMN ITEM_CATEGORY.ICT_NUM IS '카테고리번호'
/

COMMENT ON COLUMN ITEM_CATEGORY.ICT_NM IS '카테고리이름'
/

COMMENT ON COLUMN ITEM_CATEGORY.ICT_STATE IS '0:미표시/1:표시'
/


-- CARD_PAYMENT_HIST Table Create SQL
CREATE TABLE CARD_PAYMENT_HIST
(
    PH_IDX        NUMBER          NOT NULL, 
    CP_NUM        VARCHAR2(20)    NOT NULL, 
    CP_PIN_NUM    NUMBER          NOT NULL, 
    CP_YEAR       NUMBER          NOT NULL, 
    CP_MONTH      NUMBER          NOT NULL, 
    CP_TYPE       CHAR(1)         NOT NULL, 
    CONSTRAINT CARD_PAYMENT_HIST_PK PRIMARY KEY (PH_IDX)
)
/

COMMENT ON TABLE CARD_PAYMENT_HIST IS '카드 결제 내역'
/

COMMENT ON COLUMN CARD_PAYMENT_HIST.PH_IDX IS '결제 내역 IDX'
/

COMMENT ON COLUMN CARD_PAYMENT_HIST.CP_NUM IS '카드 번호'
/

COMMENT ON COLUMN CARD_PAYMENT_HIST.CP_PIN_NUM IS '카드 핀 넘버'
/

COMMENT ON COLUMN CARD_PAYMENT_HIST.CP_YEAR IS '카드 유효 년도'
/

COMMENT ON COLUMN CARD_PAYMENT_HIST.CP_MONTH IS '카드 유효 월'
/

COMMENT ON COLUMN CARD_PAYMENT_HIST.CP_TYPE IS '0~4'
/

ALTER TABLE CARD_PAYMENT_HIST
    ADD CONSTRAINT FK_CARD_PAYMENT_HIST_PH_IDX_PA FOREIGN KEY (PH_IDX)
        REFERENCES PAYMENT_HIST (PH_IDX)
/


-- CHAT_BOT_FAQ Table Create SQL
CREATE TABLE CHAT_BOT_FAQ
(
    CBF_ID    NUMBER           NOT NULL, 
    CBF_Q     VARCHAR2(100)    NOT NULL, 
    CBF_A     VARCHAR2(100)    NOT NULL, 
    CONSTRAINT CHAT_BOT_FAQ_PK PRIMARY KEY (CBF_ID)
)
/

CREATE SEQUENCE CHAT_BOT_FAQ_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER CHAT_BOT_FAQ_AI_TRG
BEFORE INSERT ON CHAT_BOT_FAQ 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT CHAT_BOT_FAQ_SEQ.NEXTVAL
    INTO :NEW.CBF_ID
    FROM DUAL;
END;
/

--DROP TRIGGER CHAT_BOT_FAQ_AI_TRG;
/

--DROP SEQUENCE CHAT_BOT_FAQ_SEQ;
/

COMMENT ON TABLE CHAT_BOT_FAQ IS '챗봇 FAQ 테이블'
/

COMMENT ON COLUMN CHAT_BOT_FAQ.CBF_ID IS 'FAQ ID'
/

COMMENT ON COLUMN CHAT_BOT_FAQ.CBF_Q IS 'FAQ 질문'
/

COMMENT ON COLUMN CHAT_BOT_FAQ.CBF_A IS 'FAQ 답변'
/


-- USER_INFO Table Create SQL
CREATE TABLE USER_INFO
(
    USER_ID             VARCHAR2(20)    NOT NULL, 
    USER_NM             VARCHAR2(20)    NOT NULL, 
    USER_PW             VARCHAR2(20)    NOT NULL, 
    USER_EMAIL          VARCHAR2(50)    NOT NULL, 
    USER_PHONE          VARCHAR2(13)    NOT NULL, 
    USER_APPLY_DT       DATE            NULL, 
    USER_GUIDE_APPLY    CHAR(1)         DEFAULT 'N' NOT NULL, 
    USER_MIL            NUMBER          DEFAULT 0 NOT NULL, 
    USER_PROFILE        BLOB            NULL, 
    CONSTRAINT USER_INFO_PK PRIMARY KEY (USER_ID)
)
/

COMMENT ON TABLE USER_INFO IS '회원 정보 테이블'
/

COMMENT ON COLUMN USER_INFO.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN USER_INFO.USER_NM IS '회원명'
/

COMMENT ON COLUMN USER_INFO.USER_PW IS '비밀번호'
/

COMMENT ON COLUMN USER_INFO.USER_EMAIL IS '이메일'
/

COMMENT ON COLUMN USER_INFO.USER_PHONE IS '전화번호'
/

COMMENT ON COLUMN USER_INFO.USER_APPLY_DT IS '가이드 신청 날짜'
/

COMMENT ON COLUMN USER_INFO.USER_GUIDE_APPLY IS 'Y/N'
/

COMMENT ON COLUMN USER_INFO.USER_MIL IS '마일리지'
/

COMMENT ON COLUMN USER_INFO.USER_PROFILE IS '프로필 사진'
/

ALTER TABLE USER_INFO
    ADD CONSTRAINT FK_USER_INFO_USER_ID_USER_AUTH FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/


-- CVNTL_INFO Table Create SQL
CREATE TABLE CVNTL_INFO
(
    CVNTL_ID      NUMBER          NOT NULL, 
    CVNTL_NM      VARCHAR2(20)    NOT NULL, 
    CVNTL_ICON    BLOB            NOT NULL, 
    CONSTRAINT CVNTL_INFO_PK PRIMARY KEY (CVNTL_ID)
)
/

CREATE SEQUENCE CVNTL_INFO_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER CVNTL_INFO_AI_TRG
BEFORE INSERT ON CVNTL_INFO 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT CVNTL_INFO_SEQ.NEXTVAL
    INTO :NEW.CVNTL_ID
    FROM DUAL;
END;
/

--DROP TRIGGER CVNTL_INFO_AI_TRG;
/

--DROP SEQUENCE CVNTL_INFO_SEQ;
/

COMMENT ON TABLE CVNTL_INFO IS '편의시설 정보 테이블'
/

COMMENT ON COLUMN CVNTL_INFO.CVNTL_ID IS '편의시설 ID'
/

COMMENT ON COLUMN CVNTL_INFO.CVNTL_NM IS '편의시설명'
/

COMMENT ON COLUMN CVNTL_INFO.CVNTL_ICON IS '아이콘 이미지'
/


-- ITEM_INFO Table Create SQL
CREATE TABLE ITEM_INFO
(
    I_NUM           NUMBER          NOT NULL, 
    I_NM            VARCHAR2(20)    NOT NULL, 
    I_PC            NUMBER          NOT NULL, 
    I_DISPC         NUMBER          NOT NULL, 
    I_QUAN          NUMBER          NOT NULL, 
    I_IMG           BLOB   , 
    I_CONTENT       CLOB            NOT NULL, 
    I_STATE         NUMBER          NOT NULL, 
    ICT_NUM         NUMBER          NOT NULL, 
    CONSTRAINT ITEM_INFO_PK PRIMARY KEY (I_NUM)
)
/

CREATE SEQUENCE ITEM_INFO_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ITEM_INFO_AI_TRG
BEFORE INSERT ON ITEM_INFO 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ITEM_INFO_SEQ.NEXTVAL
    INTO :NEW.I_NUM
    FROM DUAL;
END;
/

--DROP TRIGGER ITEM_INFO_AI_TRG;
/

--DROP SEQUENCE ITEM_INFO_SEQ;
/

COMMENT ON TABLE ITEM_INFO IS '상품 정보 테이블'
/

COMMENT ON COLUMN ITEM_INFO.I_NUM IS '상품번호'
/

COMMENT ON COLUMN ITEM_INFO.I_NM IS '상품명'
/

COMMENT ON COLUMN ITEM_INFO.I_PC IS '개당가격'
/

COMMENT ON COLUMN ITEM_INFO.I_DISPC IS '할인된 가격(할인 안할시 NULL)'
/

COMMENT ON COLUMN ITEM_INFO.I_QUAN IS '0일때 품절'
/

COMMENT ON COLUMN ITEM_INFO.I_IMG IS '사진'
/

COMMENT ON COLUMN ITEM_INFO.I_CONTENT IS '상세설명'
/

COMMENT ON COLUMN ITEM_INFO.I_STATE IS '0:판매중지(품절) / 1:판매중'
/

COMMENT ON COLUMN ITEM_INFO.ICT_NUM IS '카테고리번호'
/

ALTER TABLE ITEM_INFO
    ADD CONSTRAINT FK_ITEM_INFO_ICT_NUM_ITEM_CATE FOREIGN KEY (ICT_NUM)
        REFERENCES ITEM_CATEGORY (ICT_NUM)
/

ALTER TABLE ITEM_INFO
    ADD CONSTRAINT FK_ITEM_INFO_I_NUM_ITEM_POST_I FOREIGN KEY (I_NUM)
        REFERENCES ITEM_POST (I_NUM)
/


-- ITEM_REVIEW Table Create SQL
CREATE TABLE ITEM_REVIEW
(
    IR_NUM         NUMBER          NOT NULL, 
    IR_CONTENT     VARCHAR2(500)    NOT NULL, 
    IR_REG_DATE    VARCHAR2(20)    NOT NULL, 
    IR_STAR        NUMBER(1)       NOT NULL, 
    USER_ID        VARCHAR2(20)    NOT NULL, 
    I_NUM          NUMBER          NOT NULL, 
    CONSTRAINT ITEM_REVIEW_PK PRIMARY KEY (IR_NUM)
)
/

CREATE SEQUENCE ITEM_REVIEW_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ITEM_REVIEW_AI_TRG
BEFORE INSERT ON ITEM_REVIEW 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ITEM_REVIEW_SEQ.NEXTVAL
    INTO :NEW.IR_NUM
    FROM DUAL;
END;
/

--DROP TRIGGER ITEM_REVIEW_AI_TRG;
/

--DROP SEQUENCE ITEM_REVIEW_SEQ;
/

COMMENT ON TABLE ITEM_REVIEW IS '아이템 리뷰 테이블'
/

COMMENT ON COLUMN ITEM_REVIEW.IR_NUM IS '리뷰번호'
/

COMMENT ON COLUMN ITEM_REVIEW.IR_CONTENT IS '내용'
/

COMMENT ON COLUMN ITEM_REVIEW.IR_REG_DATE IS '작성일'
/

COMMENT ON COLUMN ITEM_REVIEW.IR_STAR IS '5점 만점'
/

COMMENT ON COLUMN ITEM_REVIEW.USER_ID IS '작성자'
/

COMMENT ON COLUMN ITEM_REVIEW.I_NUM IS '상품번호'
/

ALTER TABLE ITEM_REVIEW
    ADD CONSTRAINT FK_ITEM_REVIEW_USER_ID_USER_AU FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/

ALTER TABLE ITEM_REVIEW
    ADD CONSTRAINT FK_ITEM_REVIEW_I_NUM_ITEM_POST FOREIGN KEY (I_NUM)
        REFERENCES ITEM_POST (I_NUM)
/


-- ITEM_CART Table Create SQL
CREATE TABLE ITEM_CART
(
    IC_NUM     NUMBER          NOT NULL, 
    I_NUM      NUMBER          NULL, 
    IC_QUAN    NUMBER          NULL, 
    USER_ID    VARCHAR2(20)    NULL, 
    I_RENT_DAY      CHAR(10)        , 
    I_RETURN_DAY    CHAR(10)        , 
    CONSTRAINT ITEM_CART_PK PRIMARY KEY (IC_NUM)
)
/

CREATE SEQUENCE ITEM_CART_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ITEM_CART_AI_TRG
BEFORE INSERT ON ITEM_CART 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ITEM_CART_SEQ.NEXTVAL
    INTO :NEW.IC_NUM
    FROM DUAL;
END;
/

--DROP TRIGGER ITEM_CART_AI_TRG;
/

--DROP SEQUENCE ITEM_CART_SEQ;
/

COMMENT ON TABLE ITEM_CART IS '장바구니'
/

COMMENT ON COLUMN ITEM_CART.IC_NUM IS '장바구니번호'
/

COMMENT ON COLUMN ITEM_CART.I_NUM IS '상품번호'
/

COMMENT ON COLUMN ITEM_CART.IC_QUAN IS '상품수량'
/

COMMENT ON COLUMN ITEM_CART.USER_ID IS '회원ID'
/

ALTER TABLE ITEM_CART
    ADD CONSTRAINT FK_ITEM_CART_I_NUM_ITEM_POST_I FOREIGN KEY (I_NUM)
        REFERENCES ITEM_POST (I_NUM)
/

ALTER TABLE ITEM_CART
    ADD CONSTRAINT FK_ITEM_CART_USER_ID_USER_AUTH FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/


-- ITEM_BUY_HIST Table Create SQL
CREATE TABLE ITEM_BUY_HIST
(
    IBH_IDX          NUMBER          NOT NULL, 
    I_NUM            NUMBER          NOT NULL, 
    IBH_QUAN         NUMBER          NOT NULL, 
    PH_IDX           NUMBER          NOT NULL, 
    USER_ID          VARCHAR2(20)    NOT NULL, 
    IBH_RENT_NUM     VARCHAR2(20)    NOT NULL, 
    IBH_PHONE        VARCHAR2(13)    NOT NULL, 
    IBH_NM           VARCHAR2(20)    NOT NULL, 
    IBH_RENT_NC      CHAR(3)         NOT NULL, 
    IBH_RETURN_NC    CHAR(3)         NOT NULL, 
    CONSTRAINT ITEM_BUY_HIST_PK PRIMARY KEY (IBH_IDX)
)
/

CREATE SEQUENCE ITEM_BUY_HIST_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ITEM_BUY_HIST_AI_TRG
BEFORE INSERT ON ITEM_BUY_HIST 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ITEM_BUY_HIST_SEQ.NEXTVAL
    INTO :NEW.IBH_IDX
    FROM DUAL;
END;
/

--DROP TRIGGER ITEM_BUY_HIST_AI_TRG;
/

--DROP SEQUENCE ITEM_BUY_HIST_SEQ;
/

COMMENT ON TABLE ITEM_BUY_HIST IS '상품 구매 내역'
/

COMMENT ON COLUMN ITEM_BUY_HIST.IBH_IDX IS '상품 구매 IDX'
/

COMMENT ON COLUMN ITEM_BUY_HIST.I_NUM IS '상품번호'
/

COMMENT ON COLUMN ITEM_BUY_HIST.IBH_QUAN IS '상품수량'
/

COMMENT ON COLUMN ITEM_BUY_HIST.PH_IDX IS '결제일자'
/

COMMENT ON COLUMN ITEM_BUY_HIST.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN ITEM_BUY_HIST.IBH_RENT_NUM IS '대여번호'
/

COMMENT ON COLUMN ITEM_BUY_HIST.IBH_PHONE IS '연락처'
/

COMMENT ON COLUMN ITEM_BUY_HIST.IBH_NM IS '수령인성명'
/

COMMENT ON COLUMN ITEM_BUY_HIST.IBH_RENT_NC IS '픽업공항아이디'
/

COMMENT ON COLUMN ITEM_BUY_HIST.IBH_RETURN_NC IS '반납공항아이디'
/

ALTER TABLE ITEM_BUY_HIST
    ADD CONSTRAINT FK_ITEM_BUY_HIST_I_NUM_ITEM_PO FOREIGN KEY (I_NUM)
        REFERENCES ITEM_POST (I_NUM)
/

ALTER TABLE ITEM_BUY_HIST
    ADD CONSTRAINT FK_ITEM_BUY_HIST_USER_ID_USER_ FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/

ALTER TABLE ITEM_BUY_HIST
    ADD CONSTRAINT FK_ITEM_BUY_HIST_PH_IDX_PAYMEN FOREIGN KEY (PH_IDX)
        REFERENCES PAYMENT_HIST (PH_IDX)
/

/


-- MIL_HIST Table Create SQL
CREATE TABLE MIL_HIST
(
    MH_IDX     NUMBER          NOT NULL, 
    USER_ID    VARCHAR2(20)    NOT NULL, 
    MH_MIL     NUMBER          NOT NULL, 
    MH_DIV     CHAR(1)         NOT NULL, 
    MH_DATE    DATE            NOT NULL, 
    MH_FROM    VARCHAR2(20)    NOT NULL, 
    CONSTRAINT MIL_HIST_PK PRIMARY KEY (MH_IDX)
)
/

CREATE SEQUENCE MIL_HIST_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER MIL_HIST_AI_TRG
BEFORE INSERT ON MIL_HIST 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MIL_HIST_SEQ.NEXTVAL
    INTO :NEW.MH_IDX
    FROM DUAL;
END;
/

--DROP TRIGGER MIL_HIST_AI_TRG;
/

--DROP SEQUENCE MIL_HIST_SEQ;
/

COMMENT ON TABLE MIL_HIST IS '마일리지 사용 내역'
/

COMMENT ON COLUMN MIL_HIST.MH_IDX IS '마일리지 IDX'
/

COMMENT ON COLUMN MIL_HIST.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN MIL_HIST.MH_MIL IS '마일리지 증감'
/

COMMENT ON COLUMN MIL_HIST.MH_DIV IS '+ / -'
/

COMMENT ON COLUMN MIL_HIST.MH_DATE IS '변동일'
/

COMMENT ON COLUMN MIL_HIST.MH_FROM IS '마일리지 출저'
/

ALTER TABLE MIL_HIST
    ADD CONSTRAINT FK_MIL_HIST_USER_ID_USER_AUTH_ FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/


-- FLIGHT_RSRV_PARTNER Table Create SQL
CREATE TABLE FLIGHT_RSRV_PARTNER
(
    FRP_IDX         NUMBER          NOT NULL, 
    FR_ID           NUMBER          NOT NULL, 
    FRP_NM          VARCHAR2(20)    NOT NULL, 
    FRP_EMAIL       VARCHAR2(50)    NULL, 
    FRP_PHONE       VARCHAR2(13)    NULL, 
    FRP_PASSPORT    VARCHAR2(20)    NULL, 
    FRP_AGE         NUMBER          NULL, 
    CONSTRAINT FLIGHT_RSRV_PARTNER_PK PRIMARY KEY (FRP_IDX)
)
/

CREATE SEQUENCE FLIGHT_RSRV_PARTNER_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER FLIGHT_RSRV_PARTNER_AI_TRG
BEFORE INSERT ON FLIGHT_RSRV_PARTNER 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT FLIGHT_RSRV_PARTNER_SEQ.NEXTVAL
    INTO :NEW.FRP_IDX
    FROM DUAL;
END;
/

--DROP TRIGGER FLIGHT_RSRV_PARTNER_AI_TRG;
/

--DROP SEQUENCE FLIGHT_RSRV_PARTNER_SEQ;
/

COMMENT ON TABLE FLIGHT_RSRV_PARTNER IS '예약자 파트너 테이블'
/

COMMENT ON COLUMN FLIGHT_RSRV_PARTNER.FRP_IDX IS '파트너 IDX'
/

COMMENT ON COLUMN FLIGHT_RSRV_PARTNER.FR_ID IS '예약 ID'
/

COMMENT ON COLUMN FLIGHT_RSRV_PARTNER.FRP_NM IS '파트너명'
/

COMMENT ON COLUMN FLIGHT_RSRV_PARTNER.FRP_EMAIL IS '파트너 이메일'
/

COMMENT ON COLUMN FLIGHT_RSRV_PARTNER.FRP_PHONE IS '파트너 연락처'
/

COMMENT ON COLUMN FLIGHT_RSRV_PARTNER.FRP_PASSPORT IS '파트너 여권번호'
/

COMMENT ON COLUMN FLIGHT_RSRV_PARTNER.FRP_AGE IS '10대 단위'
/

ALTER TABLE FLIGHT_RSRV_PARTNER
    ADD CONSTRAINT FK_FLIGHT_RSRV_PARTNER_FR_ID_F FOREIGN KEY (FR_ID)
        REFERENCES FLIGHT_RSRV_LOG (FR_ID)
/


-- PACKAGE_TOUR_RSRV_LOG Table Create SQL
CREATE TABLE PACKAGE_TOUR_RSRV_LOG
(
    PTR_ID       NUMBER          NOT NULL, 
    USER_ID      VARCHAR2(20)    NOT NULL, 
    PI_ID        NUMBER          NULL, 
    TI_ID        NUMBER          NULL, 
    PH_IDX       NUMBER          NOT NULL, 
    PTR_PP       NUMBER          DEFAULT 1 NOT NULL, 
    PTR_STATE    CHAR(1)         DEFAULT '0' NOT NULL, 
    CONSTRAINT PACKAGE_TOUR_RSRV_LOG_PK PRIMARY KEY (PTR_ID)
)
/

CREATE SEQUENCE PACKAGE_TOUR_RSRV_LOG_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER PACKAGE_TOUR_RSRV_LOG_AI_TRG
BEFORE INSERT ON PACKAGE_TOUR_RSRV_LOG 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT PACKAGE_TOUR_RSRV_LOG_SEQ.NEXTVAL
    INTO :NEW.PTR_ID
    FROM DUAL;
END;
/

--DROP TRIGGER PACKAGE_TOUR_RSRV_LOG_AI_TRG;
/

--DROP SEQUENCE PACKAGE_TOUR_RSRV_LOG_SEQ;
/

COMMENT ON TABLE PACKAGE_TOUR_RSRV_LOG IS '패키지/투어 예약 테이블'
/

COMMENT ON COLUMN PACKAGE_TOUR_RSRV_LOG.PTR_ID IS '패키지/투어 예약 ID'
/

COMMENT ON COLUMN PACKAGE_TOUR_RSRV_LOG.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN PACKAGE_TOUR_RSRV_LOG.PI_ID IS '패키지 ID'
/

COMMENT ON COLUMN PACKAGE_TOUR_RSRV_LOG.TI_ID IS '투어 ID'
/

COMMENT ON COLUMN PACKAGE_TOUR_RSRV_LOG.PH_IDX IS '결제 내역 IDX'
/

COMMENT ON COLUMN PACKAGE_TOUR_RSRV_LOG.PTR_PP IS '예약 인원'
/

COMMENT ON COLUMN PACKAGE_TOUR_RSRV_LOG.PTR_STATE IS '0:결제완료/1:취소'
/

ALTER TABLE PACKAGE_TOUR_RSRV_LOG
    ADD CONSTRAINT FK_PACKAGE_TOUR_RSRV_LOG_USER_ FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/

ALTER TABLE PACKAGE_TOUR_RSRV_LOG
    ADD CONSTRAINT FK_PACKAGE_TOUR_RSRV_LOG_PI_ID FOREIGN KEY (PI_ID)
        REFERENCES PACKAGE_INFO (PI_ID)
/

ALTER TABLE PACKAGE_TOUR_RSRV_LOG
    ADD CONSTRAINT FK_PACKAGE_TOUR_RSRV_LOG_PH_ID FOREIGN KEY (PH_IDX)
        REFERENCES CARD_PAYMENT_HIST (PH_IDX)
/

ALTER TABLE PACKAGE_TOUR_RSRV_LOG
    ADD CONSTRAINT FK_PACKAGE_TOUR_RSRV_LOG_TI_ID FOREIGN KEY (TI_ID)
        REFERENCES TOUR_INFO (TI_ID)
/


-- TOUR_REPLY Table Create SQL
CREATE TABLE TOUR_REPLY
(
    TR_IDX        NUMBER          NOT NULL, 
    TR_CONTENT    CLOB            NOT NULL, 
    TR_DATE       DATE            NOT NULL, 
    TI_ID         NUMBER          NOT NULL, 
    USER_ID       VARCHAR2(20)    NOT NULL, 
    TI_STAR       NUMBER(1)       NOT NULL, 
    CONSTRAINT TOUR_REPLY_PK PRIMARY KEY (TR_IDX)
)
/

CREATE SEQUENCE TOUR_REPLY_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TOUR_REPLY_AI_TRG
BEFORE INSERT ON TOUR_REPLY 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TOUR_REPLY_SEQ.NEXTVAL
    INTO :NEW.TR_IDX
    FROM DUAL;
END;
/

--DROP TRIGGER TOUR_REPLY_AI_TRG;
/

--DROP SEQUENCE TOUR_REPLY_SEQ;
/

COMMENT ON TABLE TOUR_REPLY IS '투어 댓글 테이블'
/

COMMENT ON COLUMN TOUR_REPLY.TR_IDX IS '투어 댓글 IDX'
/

COMMENT ON COLUMN TOUR_REPLY.TR_CONTENT IS '댓글 내용'
/

COMMENT ON COLUMN TOUR_REPLY.TR_DATE IS '댓글 등록일'
/

COMMENT ON COLUMN TOUR_REPLY.TI_ID IS '투어 ID'
/

COMMENT ON COLUMN TOUR_REPLY.USER_ID IS '작성자 ID'
/

COMMENT ON COLUMN TOUR_REPLY.TI_STAR IS '5점 만점'
/

ALTER TABLE TOUR_REPLY
    ADD CONSTRAINT FK_TOUR_REPLY_TI_ID_TOUR_INFO_ FOREIGN KEY (TI_ID)
        REFERENCES TOUR_INFO (TI_ID)
/

ALTER TABLE TOUR_REPLY
    ADD CONSTRAINT FK_TOUR_REPLY_USER_ID_USER_AUT FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/


-- CHAT_BOT_HIST Table Create SQL
CREATE TABLE CHAT_BOT_HIST
(
    CBH_IDX        NUMBER           NOT NULL, 
    USER_ID        VARCHAR2(20)     NOT NULL, 
    CBH_KND        CHAR(1)          NOT NULL, 
    CBH_CONTENT    VARCHAR2(500)    NOT NULL, 
    CBH_DT         DATE             NOT NULL, 
    CBF_ID         NUMBER           NULL, 
    CBH_STATE      NUMBER           DEFAULT 0 NOT NULL, 
    CONSTRAINT CHAT_BOT_HIST_PK PRIMARY KEY (CBH_IDX)
)
/

CREATE SEQUENCE CHAT_BOT_HIST_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER CHAT_BOT_HIST_AI_TRG
BEFORE INSERT ON CHAT_BOT_HIST 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT CHAT_BOT_HIST_SEQ.NEXTVAL
    INTO :NEW.CBH_IDX
    FROM DUAL;
END;
/

--DROP TRIGGER CHAT_BOT_HIST_AI_TRG;
/

--DROP SEQUENCE CHAT_BOT_HIST_SEQ;
/

COMMENT ON TABLE CHAT_BOT_HIST IS '챗봇 채팅 내역'
/

COMMENT ON COLUMN CHAT_BOT_HIST.CBH_IDX IS '챗봇 IDX'
/

COMMENT ON COLUMN CHAT_BOT_HIST.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN CHAT_BOT_HIST.CBH_KND IS 'Q:질문/A:답변'
/

COMMENT ON COLUMN CHAT_BOT_HIST.CBH_CONTENT IS '채팅 내용'
/

COMMENT ON COLUMN CHAT_BOT_HIST.CBH_DT IS '채팅 일시'
/

COMMENT ON COLUMN CHAT_BOT_HIST.CBF_ID IS 'FAQ ID'
/

COMMENT ON COLUMN CHAT_BOT_HIST.CBH_STATE IS '0:읽지않음/1:읽음'
/

ALTER TABLE CHAT_BOT_HIST
    ADD CONSTRAINT FK_CHAT_BOT_HIST_USER_ID_USER_ FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/

ALTER TABLE CHAT_BOT_HIST
    ADD CONSTRAINT FK_CHAT_BOT_HIST_CBF_ID_CHAT_B FOREIGN KEY (CBF_ID)
        REFERENCES CHAT_BOT_FAQ (CBF_ID)
/


-- TRAVEL_REVIEW Table Create SQL
CREATE TABLE TRAVEL_REVIEW
(
    TR_IDX         NUMBER          NOT NULL, 
    TR_TITLE       VARCHAR2(50)    NOT NULL, 
    TR_CONTENT     CLOB            NOT NULL, 
    TR_HIT         NUMBER          DEFAULT 0 NOT NULL, 
    TR_REG_DATE    DATE            NOT NULL, 
    TR_IMG         BLOB            NULL, 
    USER_ID        VARCHAR2(20)    NOT NULL, 
    PI_ID          NUMBER          NULL, 
    TI_ID          NUMBER          NULL, 
    CONSTRAINT TRAVEL_REVIEW_PK PRIMARY KEY (TR_IDX)
)
/

CREATE SEQUENCE TRAVEL_REVIEW_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TRAVEL_REVIEW_AI_TRG
BEFORE INSERT ON TRAVEL_REVIEW 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TRAVEL_REVIEW_SEQ.NEXTVAL
    INTO :NEW.TR_IDX
    FROM DUAL;
END;
/

--DROP TRIGGER TRAVEL_REVIEW_AI_TRG;
/

--DROP SEQUENCE TRAVEL_REVIEW_SEQ;
/

COMMENT ON TABLE TRAVEL_REVIEW IS '여행 후기 테이블'
/

COMMENT ON COLUMN TRAVEL_REVIEW.TR_IDX IS '여행 후기 IDX'
/

COMMENT ON COLUMN TRAVEL_REVIEW.TR_TITLE IS '여행 후기 제목'
/

COMMENT ON COLUMN TRAVEL_REVIEW.TR_CONTENT IS '여행 후기 내용'
/

COMMENT ON COLUMN TRAVEL_REVIEW.TR_HIT IS '여행 후기 조회수'
/

COMMENT ON COLUMN TRAVEL_REVIEW.TR_REG_DATE IS '여행 후기 등록일'
/

COMMENT ON COLUMN TRAVEL_REVIEW.TR_IMG IS '여행 후기 이미지'
/

COMMENT ON COLUMN TRAVEL_REVIEW.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN TRAVEL_REVIEW.PI_ID IS '패키지 ID'
/

COMMENT ON COLUMN TRAVEL_REVIEW.TI_ID IS '투어 ID'
/

ALTER TABLE TRAVEL_REVIEW
    ADD CONSTRAINT FK_TRAVEL_REVIEW_PI_ID_PACKAGE FOREIGN KEY (PI_ID)
        REFERENCES PACKAGE_INFO (PI_ID)
/

ALTER TABLE TRAVEL_REVIEW
    ADD CONSTRAINT FK_TRAVEL_REVIEW_TI_ID_TOUR_IN FOREIGN KEY (TI_ID)
        REFERENCES TOUR_INFO (TI_ID)
/

ALTER TABLE TRAVEL_REVIEW
    ADD CONSTRAINT FK_TRAVEL_REVIEW_USER_ID_USER_ FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/

-- 임진석_컬럼 변경 내역
ALTER TABLE STAYING_INFO ADD(ST_IMG VARCHAR2(50));
ALTER TABLE STAYING_INFO MODIFY(ST_NM VARCHAR2(100));
ALTER TABLE STAYING_INFO MODIFY(ST_ADDR VARCHAR2(100));
ALTER TABLE STAYING_INFO ADD(ST_CONTENT VARCHAR2(500));
ALTER TABLE STAYING_INFO DROP COLUMN ST_IMG;
ALTER TABLE STAYING_ROOM DROP COLUMN SR_CHECK_IN;
ALTER TABLE STAYING_ROOM DROP COLUMN SR_CHECK_OUT;
ALTER TABLE STAYING_INFO ADD(ST_CHECK_IN CHAR(5));
ALTER TABLE STAYING_INFO ADD(ST_CHECK_OUT CHAR(5));
ALTER TABLE CVNTL_INFO DROP COLUMN CVNTL_ICON;
ALTER TABLE CVNTL_INFO ADD(CVNTL_ICON VARCHAR2(30));
ALTER TABLE STAYING_INFO DROP COLUMN ST_PLACE_ID;
ALTER TABLE STAYING_INFO DROP COLUMN ST_LA;
ALTER TABLE STAYING_INFO DROP COLUMN ST_LO;
ALTER TABLE STAYING_RSRV_LOG ADD(PH_IDX NUMBER);
ALTER TABLE STAYING_RSRV_LOG DROP COLUMN SRL_PP;
ALTER TABLE STAYING_RSRV_LOG ADD(SRL_ADULT_PP NUMBER);
ALTER TABLE STAYING_RSRV_LOG ADD(SRL_KID_PP NUMBER);
/
ALTER TABLE STAYING_RSRV_LOG
    ADD CONSTRAINT FK_SRL_PH_IDX_PAYM FOREIGN KEY (PH_IDX)
        REFERENCES PAYMENT_HIST (PH_IDX)
/
DROP TRIGGER STAYING_INFO_AI_TRG;
/

DROP SEQUENCE STAYING_INFO_SEQ;
/

DROP TRIGGER STAYING_ROOM_AI_TRG;
/

DROP SEQUENCE STAYING_ROOM_SEQ;
/
ALTER TABLE STAYING_ROOM ADD(SR_NM VARCHAR2(50));
DROP TRIGGER PAYMENT_HIST_AI_TRG;
DROP TRIGGER CVNTL_INFO_AI_TRG;
/

--강양구 투어 수정 내역 
alter table tour_info add (uploadfile blob);
alter table tour_info add (user_id varchar2(20));
alter table tour_info add (reg_date date);
alter table tour_info add (re_cnt number);
alter table tour_info add (ti_select number default 0 not null);

--ITEM_BUY_HIST 테이블 수정사항
alter table item_buy_hist add (ibh_email varchar2(50 byte)); --주문자 이메일주소
alter table item_buy_hist add (ibh_pay number(1)); --결제방식
alter table item_buy_hist add (ibh_request blob); --요청사항

--한소라 여행물품 수정 내역
--item_info 테이블
DROP TABLE item_info; 
후에 다시 생성
(
    I_NUM           NUMBER          NOT NULL, 
    I_NM            VARCHAR2(20)    NOT NULL, 
    I_PC            NUMBER          NOT NULL, 
    I_DISPC         NUMBER          NOT NULL, 
    I_QUAN          NUMBER          NOT NULL, 
    I_IMG           BLOB   , 
    I_CONTENT       CLOB            NOT NULL, 
    I_STATE         NUMBER          NOT NULL, 
    ICT_NUM         NUMBER          NOT NULL, 
    CONSTRAINT ITEM_INFO_PK PRIMARY KEY (I_NUM)
)
 
--item_review 테이블 수정사항
alter table item_review modify ir_content varchar2(500);

--item_cart 테이블 수정사항
alter table item_cart add i_rent_nc varchar2(12);
alter table item_cart add i_return_nc varchar2(12);

-- TOUR_APPLY_HIST Table Create SQL
CREATE TABLE TOUR_APPLY_HIST
(
    TA_IDX       NUMBER          NOT NULL, 
    USER_ID      VARCHAR2(20)    NOT NULL, 
    TI_ID        NUMBER          NOT NULL, 
    TI_STATE     CHAR(1)         NOT NULL, 
    TI_REG_DT    DATE            DEFAULT SYSDATE NOT NULL, 
    CONSTRAINT TOUR_APPLY_HIST_PK PRIMARY KEY (TA_IDX)
)
/

CREATE SEQUENCE TOUR_APPLY_HIST_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TOUR_APPLY_HIST_AI_TRG
BEFORE INSERT ON TOUR_APPLY_HIST 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TOUR_APPLY_HIST_SEQ.NEXTVAL
    INTO :NEW.TA_IDX
    FROM DUAL;
END;
/

--DROP TRIGGER TOUR_APPLY_HIST_AI_TRG;
/

--DROP SEQUENCE TOUR_APPLY_HIST_SEQ;
/

COMMENT ON TABLE TOUR_APPLY_HIST IS '투어 신청 내역'
/

COMMENT ON COLUMN TOUR_APPLY_HIST.TA_IDX IS '신청내역 IDX'
/

COMMENT ON COLUMN TOUR_APPLY_HIST.USER_ID IS '회원 ID'
/

COMMENT ON COLUMN TOUR_APPLY_HIST.TI_ID IS '투어 ID'
/

COMMENT ON COLUMN TOUR_APPLY_HIST.TI_STATE IS '0:신청 / 1:승인 / 2:거부'
/

COMMENT ON COLUMN TOUR_APPLY_HIST.TI_REG_DT IS '신청일시'
/

ALTER TABLE TOUR_APPLY_HIST
    ADD CONSTRAINT FK_TOUR_APPLY_HIST_USER_ID_USE FOREIGN KEY (USER_ID)
        REFERENCES USER_AUTH (USER_ID)
/

ALTER TABLE TOUR_APPLY_HIST
    ADD CONSTRAINT FK_TOUR_APPLY_HIST_TI_ID_TOUR_ FOREIGN KEY (TI_ID)
        REFERENCES TOUR_INFO (TI_ID)
/

ALTER TABLE TOUR_APPLY_HIST ADD(PH_IDX NUMBER);
/
ALTER TABLE TOUR_APPLY_HIST
    ADD CONSTRAINT FK_TA_PH_IDX_PAYM FOREIGN KEY (PH_IDX)
        REFERENCES PAYMENT_HIST (PH_IDX)
/

--박선욱 flight 컬럼 변경
ALTER TABLE FLIGHT_SPOT_INFO MODIFY(FSI_REG_DT DATE DEFAULT SYSDATE);
ALTER TABLE FLIGHT_INFO DROP COLUMN fi_logo;
ALTER TABLE FLIGHT_INFO ADD (fi_logo VARCHAR(100));
ALTER TABLE FLIGHT_RSRV_LOG ADD (fr_fnm VARCHAR2(20));
COMMENT ON COLUMN FLIGHT_RSRV_LOG.fr_fnm IS '예약자 성';



--19.04.12
--장바구니 detail 테이블 추가
CREATE TABLE ITEM_BUY_HIST_DETAIL
(
    DETAIL_NUM      NUMBER          NOT NULL, 
    ITEM_NUM    	NUMBER   		NOT NULL, 
    ITEM_NM     	VARCHAR2(30)    NOT NULL, 
    ITEM_PC    		NUMBER          NOT NULL, 
    ITEM_TOTAL    	NUMBER          NOT NULL, 
    ORDER_QUAN		NUMBER			NOT NULL,
    IBH_IDX			NUMBER			NOT NULL,
    CONSTRAINT ITEM_BUY_HIST_DETAIL_PK PRIMARY KEY (DETAIL_NUM),
    CONSTRAINT ITEM_BUY_HIST_DETAIL_FK FOREIGN KEY (IBH_IDX) REFERENCES ITEM_BUY_HIST (IBH_IDX)
);

CREATE SEQUENCE ITEM_BUY_HIST_DETAIL_SEQ
START WITH 1
INCREMENT BY 1;

--박요셉 2019-04-15 user_info .user_pw 컬럼 길이 변경
ALTER TABLE USER_INFO MODIFY(USER_PW VARCHAR2(50));